#!/usr/bin/env python3
# coding: utf-8

# USE: Execute somewhere. (Searches recursively.)


import sys
from pathlib import Path
import argparse
import os

try:
  import numpy as np
except ModuleNotFoundError:
  sys.exit("Module 'numpy' not installed. Exiting.")


def main():
  parser = argparse.ArgumentParser(
      description='Search recursively for all "res" files and get percentage of negative values.')
  parser.add_argument("-s", "--save", nargs='?', const="neg_vals.csv", type=str,
                      help="Save output. Name is optional. Defaults to 'neg_vals.csv'.")
  args = parser.parse_args()

  num_rcts = 718
  data = [["functional", "omega", "percentage"]]

  for path in sorted(Path(".").rglob("res*")):
    num_neg_vals = 0
    with open(path) as f:
      for line in f:
        if " -" in line:
          num_neg_vals += 1

    pct_neg_vals = round(num_neg_vals/num_rcts*100, 1)
    print(f"File {path} contains {pct_neg_vals}% negative values.")

    if args.save:
      p = path.name.lstrip("res_")
      func = p.split("_")[0]
      omega = p.split("_")[1].split(".")[0]
      data.append([func, omega, pct_neg_vals])

  # save
  if args.save:
    data = np.asarray(data, dtype=str)
    save_loc = os.path.join(os.path.realpath("."), args.save)
    np.savetxt(save_loc, data, fmt='%s', delimiter="\t")
    print("\nSaved data to {}.".format(save_loc))


if __name__ == '__main__':
  main()
